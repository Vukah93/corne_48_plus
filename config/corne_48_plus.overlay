/*
 * Copyright (c) 2023 Your Name
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix.h>
#include <dt-bindings/zmk/hid.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h> // For &out_bt &out_usb etc.
#include <dt-bindings/zmk/backlight.h> // For backlight behaviors like &bl_inc, &bl_dec, &bl_tog

/ {
    chosen {
        zmk,kscan = &kscan0;
        zmk,matrix_transform = &default_transform;
    };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        // Điều chỉnh diode-direction dựa trên PCB của bạn (COL2ROW hoặc ROW2COL)
        diode-direction = "col2row";

        // Các chân GPIO của nice!nano v2 (nRF52840)
        // Hãy chắc chắn rằng các chân này khớp với cách Corne Plus của bạn được nối dây
        col-gpios = <&gpio0 26 GPIO_ACTIVE_HIGH>, // P0.26 (Corne COL0)
                    <&gpio0 27 GPIO_ACTIVE_HIGH>, // P0.27 (Corne COL1)
                    <&gpio0 28 GPIO_ACTIVE_HIGH>, // P0.28 (Corne COL2)
                    <&gpio0 29 GPIO_ACTIVE_HIGH>, // P0.29 (Corne COL3)
                    <&gpio0 30 GPIO_ACTIVE_HIGH>, // P0.30 (Corne COL4)
                    <&gpio0 31 GPIO_ACTIVE_HIGH>; // P0.31 (Corne COL5)

        row-gpios = <&gpio0 20 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>, // P0.20 (Corne ROW0)
                    <&gpio0 22 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>, // P0.22 (Corne ROW1)
                    <&gpio0 24 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>, // P0.24 (Corne ROW2)
                    <&gpio0 03 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>, // P0.03 (Corne ROW3)
                    <&gpio0 04 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>; // P0.04 (Corne ROW4)

        // Nếu bạn có thêm phím (ví dụ: 48 phím thay vì 42), bạn cần điều chỉnh matrix_transform
        // và có thể cả col-gpios/row-gpios nếu các phím đó nối vào các chân khác.
    };

    default_transform: keymap_transform {
        compatible = "zmk,matrix-transform";
        rows = <5>; // Số hàng
        columns = <6>; // Số cột
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)
            RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5)
            RC(4,0) RC(4,1) RC(4,2) RC(4,3) RC(4,4) RC(4,5)
        >;
    };

    // Encoder (nếu bạn có một encoder trên mỗi bên, bạn cần định nghĩa hai cái)
    // Các chân GPx là ví dụ, kiểm tra sơ đồ chân nice!nano v2 và PCB của bạn
    encoders {
        compatible = "zmk,encoders";
        encoder_1: encoder_1 {
            // Chân CLK và DT của encoder
            a-gpios = <&gpio0 11 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>; // CLK
            b-gpios = <&gpio0 12 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>; // DT
            steps = <4>; // Bước mỗi nấc (thường 4 cho encoder 24 xung/nấc)
            // Lưu ý: ZMK sẽ tự động xử lý nút nhấn encoder nếu nó là một nút ma trận bình thường.
            // Nếu nút nhấn encoder là một nút riêng biệt, bạn sẽ định nghĩa nó trong kscan.
        };
    };

    // Backlight LED (Đèn nền đơn sắc)
    // Chân GPIO cho đèn nền (thường là P0.00 cho nice!nano v2)
    leds {
        compatible = "gpio-leds";
        led_backlight: led_0 {
            gpios = <&gpio0 0 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>; // P0.00 là pin mặc định của nice!nano v2
            label = "BACKLIGHT_LED";
        };
    };

    // Joystick (đây là phần phức tạp nhất để dịch từ QMK sang ZMK)
    // ZMK xử lý joystick analog qua ADC. Bạn cần biết chân ADC nào được sử dụng.
    // Ví dụ với 2 chân ADC cho trục X và Y
    // Bạn cần kiểm tra chân ADC trên nice!nano v2 và cách joystick được nối.
    aliases {
        adc_x_channel = &adc_channel_x;
        adc_y_channel = &adc_channel_y;
    };

    analog_inputs {
        compatible = "zmk,analog-input";
        adc_x_channel: channel_x {
            io-channel = <&adc 1>; // VD: ADC channel 1 (P0.29 trên nRF52840)
            label = "JOYSTICK_X";
        };
        adc_y_channel: channel_y {
            io-channel = <&adc 2>; // VD: ADC channel 2 (P0.30 trên nRF52840)
            label = "JOYSTICK_Y";
        };
    };
};